Running JSLint:

checking app/assets/javascripts/application.js... OK
checking app/assets/javascripts/Cocktail.js... 1 error:

Lint at line 33 character 45: Expected '{' and instead saw 'return'.
if (obj[key] === value) return;

checking app/assets/javascripts/collections/account_types.js... OK
checking app/assets/javascripts/collections/accounts.js... OK
checking app/assets/javascripts/collections/categories.js... OK
checking app/assets/javascripts/collections/category_types.js... OK
checking app/assets/javascripts/collections/date_range_options.js... OK
checking app/assets/javascripts/collections/patterns.js... OK
checking app/assets/javascripts/collections/reconciliations.js... OK
checking app/assets/javascripts/collections/subcategories.js... OK
checking app/assets/javascripts/collections/transaction_types.js... OK
checking app/assets/javascripts/collections/transactions.js... OK
checking app/assets/javascripts/helpers/button_helper.js... 11 errors:

Lint at line 9 character 29: ['text'] is better written in dot notation.
buttonText = options.hash['text'] || 'Delete';

Lint at line 14 character 29: ['text'] is better written in dot notation.
buttonText = options.hash['text'] || 'Save';

Lint at line 20 character 29: ['text'] is better written in dot notation.
buttonText = options.hash['text'] || 'Edit';

Lint at line 26 character 29: ['text'] is better written in dot notation.
buttonText = options.hash['text'] || 'Cancel';

Lint at line 31 character 29: ['text'] is better written in dot notation.
buttonText = options.hash['text'] || 'New';

Lint at line 41 character 29: ['text'] is better written in dot notation.
buttonText = options.hash['text'] || 'Go Back';

Lint at line 47 character 29: ['text'] is better written in dot notation.
buttonText = options.hash['text'] || '';

Lint at line 48 character 27: ['id'] is better written in dot notation.
buttonId = options.hash['id'] || 'action'

Lint at line 48 character 42: Missing semicolon.
buttonId = options.hash['id'] || 'action'

Lint at line 49 character 20: ['icon'] is better written in dot notation.
if (options.hash['icon']) {

Lint at line 50 character 49: ['icon'] is better written in dot notation.
buttonText = '<i class="fa ' + options.hash['icon'] + '"></i> ' + buttonText;

checking app/assets/javascripts/helpers/checkbox_helper.js... OK
checking app/assets/javascripts/helpers/date_helper.js... 5 errors:

Lint at line 7 character 20: Expected '{' and instead saw 'return'.
if (!dateString) return '';

Lint at line 9 character 27: Expected ')' and instead saw 'Jan'.
var m_names = new Array("Jan", "Feb", "Mar",

Lint at line 9 character 34: Expected an identifier and instead saw 'Feb'.
var m_names = new Array("Jan", "Feb", "Mar",

Lint at line 9 character 34: Stopping, unable to continue. (25% scanned).


checking app/assets/javascripts/helpers/handlebars_partials.js... OK
checking app/assets/javascripts/helpers/icon_helper.js... 8 errors:

Lint at line 8 character 2: Missing semicolon.
}

Lint at line 11 character 27: ['text'] is better written in dot notation.
iconText = options.hash['text'] || '';

Lint at line 12 character 25: ['id'] is better written in dot notation.
idText = options.hash['id'] || 'edit';

Lint at line 17 character 27: ['text'] is better written in dot notation.
iconText = options.hash['text'] || '';

Lint at line 18 character 25: ['id'] is better written in dot notation.
idText = options.hash['id'] || 'new';

Lint at line 23 character 27: ['text'] is better written in dot notation.
iconText = options.hash['text'] || '';

Lint at line 24 character 25: ['id'] is better written in dot notation.
idText = options.hash['id'] || 'delete';

Lint at line 29 character 27: ['text'] is better written in dot notation.
iconText = options.hash['text'] || '';

checking app/assets/javascripts/helpers/money_helper.js... 2 errors:

Lint at line 26 character 50: Missing semicolon.
return accountingFormat(centsToDollars(amount))

Lint at line 32 character 127: Line too long.
html = '<div class="input-group"><div class="input-group-addon">$</div><input type="text" class="form-control" name="' + id +

checking app/assets/javascripts/helpers/select_helper.js... 8 errors:

Lint at line 13 character 19: Use '===' to compare with 'null'.
if ((model_id == null) || (model_id == "")) {

Lint at line 13 character 41: Use '===' to compare with ''.
if ((model_id == null) || (model_id == "")) {

Lint at line 18 character 24: Use '===' to compare with 'null'.
} else if ((model_id == null) || (model_id == "")) {

Lint at line 18 character 46: Use '===' to compare with ''.
} else if ((model_id == null) || (model_id == "")) {

Lint at line 24 character 19: 'selectContent' was used before it was defined.
var selectContent = function(array, model_id, hasUnassigned) {

Lint at line 35 character 24: Missing semicolon.
html += '</option>'

Lint at line 48 character 40: Missing semicolon.
var group_id = group.models[j].id

Lint at line 61 character 26: Missing semicolon.
html += '</option>'

checking app/assets/javascripts/helpers/string_helper.js... 1 error:

Lint at line 16 character 12: Use '!==' to compare with ''.
if (html != "") {

checking app/assets/javascripts/helpers/text_input_helper.js... OK
checking app/assets/javascripts/mixins/delete_model.js... 2 errors:

Lint at line 12 character 11: Use '===' to compare with 'true'.
if (r == true) {

Lint at line 16 character 2: Missing semicolon.
}

checking app/assets/javascripts/models/account.js... OK
checking app/assets/javascripts/models/account_type.js... OK
checking app/assets/javascripts/models/base_model.js... OK
checking app/assets/javascripts/models/category.js... OK
checking app/assets/javascripts/models/category_type.js... OK
checking app/assets/javascripts/models/date_range_option.js... OK
checking app/assets/javascripts/models/filter.js... OK
checking app/assets/javascripts/models/pattern.js... OK
checking app/assets/javascripts/models/reconciliation.js... OK
checking app/assets/javascripts/models/report.js... OK
checking app/assets/javascripts/models/report_for_account.js... OK
checking app/assets/javascripts/models/subcategory.js... OK
checking app/assets/javascripts/models/transaction.js... OK
checking app/assets/javascripts/models/transaction_type.js... OK
checking app/assets/javascripts/my_money.js... OK
checking app/assets/javascripts/report.js... 5 errors:

Lint at line 197 character 106: Don't make functions within a loop.
.attr("transform", function (d,i) { return "translate(" + (i*(bar_width + 2*bar_gap)) + ", 0)"; });

Lint at line 202 character 89: Don't make functions within a loop.
.attr("height", function(d) { return Math.abs(y_scale(d[x]/100.0) - y_scale(0)); })

Lint at line 203 character 83: Don't make functions within a loop.
.attr("y", function(d) { return Math.min(y_scale(0),y_scale(d[x]/100.0)); } );

Lint at line 212 character 8: Don't make functions within a loop.
})

Lint at line 214 character 115: Don't make functions within a loop.
.text(function(d) { if (d[x] !== 0) { return accounting.formatMoney(Math.abs(d[x]/100.0), '$', 0, ","); } } );

checking app/assets/javascripts/routers/accounts_router.js... OK
checking app/assets/javascripts/validation.js... OK
checking app/assets/javascripts/views/accounts/account_edit_view.js... 1 error:

Lint at line 43 character 11: Use '===' to compare with 'true'.
if (r == true) {

checking app/assets/javascripts/views/accounts/account_form_view.js... 1 error:

Lint at line 11 character 31: Extra comma.
"click #save": "saveModel",

checking app/assets/javascripts/views/accounts/account_new_view.js... 1 error:

Lint at line 39 character 33: ['new_form'] is better written in dot notation.
this.listenTo(this.subViews['new_form'], 'cancelEdit', this.goBack);

checking app/assets/javascripts/views/accounts/account_show_view.js... OK
checking app/assets/javascripts/views/accounts/account_stats_view.js... OK
checking app/assets/javascripts/views/accounts/account_summary_view.js... 1 error:

Lint at line 9 character 31: Extra comma.
"click #go_back": "goBack",

checking app/assets/javascripts/views/accounts/account_type_table_view.js... OK
checking app/assets/javascripts/views/accounts/account_view.js... OK
checking app/assets/javascripts/views/accounts/accounts_index_view.js... OK
checking app/assets/javascripts/views/accounts/accounts_net_worth_view.js... 1 error:

Lint at line 16 character 2: Mixed spaces and tabs.
return this;

checking app/assets/javascripts/views/base_edit_view.js... OK
checking app/assets/javascripts/views/base_table_row_view.js... OK
checking app/assets/javascripts/views/base_table_view.js... OK
checking app/assets/javascripts/views/base_view.js... OK
checking app/assets/javascripts/views/categories/category_edit_view.js... OK
checking app/assets/javascripts/views/categories/category_index_view.js... 1 error:

Lint at line 35 character 4: Extra comma.
},

checking app/assets/javascripts/views/categories/category_row_view.js... OK
checking app/assets/javascripts/views/categories/category_type_table_view.js... OK
checking app/assets/javascripts/views/categories/subcategory_edit_view.js... OK
checking app/assets/javascripts/views/categories/subcategory_row_view.js... OK
checking app/assets/javascripts/views/filters/account_filter_view.js... OK
checking app/assets/javascripts/views/filters/account_type_filter_view.js... OK
checking app/assets/javascripts/views/filters/category_filter_view.js... OK
checking app/assets/javascripts/views/filters/date_range_filter.js... 1 error:

Lint at line 6 character 50: Extra comma.
"change #date_range_option_id": "updateDates",

checking app/assets/javascripts/views/filters/filter_view.js... OK
checking app/assets/javascripts/views/import/import_file_chooser_view.js... 3 errors:

Lint at line 15 character 33: ['account'] is better written in dot notation.
this.account = this.options['account'];

Lint at line 16 character 34: ['accounts'] is better written in dot notation.
this.accounts = this.options['accounts'];

Lint at line 28 character 49: Missing semicolon.
this.$el.find('#file_name').trigger('click')

checking app/assets/javascripts/views/import/import_transaction_row_view.js... 5 errors:

Lint at line 13 character 36: ['categories'] is better written in dot notation.
this.categories = this.options['categories'];

Lint at line 14 character 39: ['subcategories'] is better written in dot notation.
this.subcategories = this.options['subcategories'];

Lint at line 15 character 39: ['categoryTypes'] is better written in dot notation.
this.categoryTypes = this.options['categoryTypes'];

Lint at line 32 character 35: Missing radix parameter.
this.model.set('category_id', parseInt(this.$('#category_id').val()));

Lint at line 39 character 38: Missing radix parameter.
this.model.set('subcategory_id', parseInt(this.$('#subcategory_id').val()));

checking app/assets/javascripts/views/import/import_transaction_select_view.js... 3 errors:

Lint at line 6 character 36: ['categories'] is better written in dot notation.
this.categories = this.options['categories'];

Lint at line 7 character 39: ['subcategories'] is better written in dot notation.
this.subcategories = this.options['subcategories'];

Lint at line 8 character 39: ['categoryTypes'] is better written in dot notation.
this.categoryTypes = this.options['categoryTypes'];

checking app/assets/javascripts/views/import/import_view.js... 1 error:

Lint at line 72 character 33: Expected an identifier and instead saw 'import' (a reserved word).
this.transactions.where({ import: true }),

checking app/assets/javascripts/views/layout/footer_view.js... OK
checking app/assets/javascripts/views/layout/header_view.js... OK
checking app/assets/javascripts/views/patterns/pattern_edit_view.js... OK
checking app/assets/javascripts/views/patterns/pattern_index_view.js... OK
checking app/assets/javascripts/views/patterns/pattern_table_row_view.js... OK
checking app/assets/javascripts/views/patterns/pattern_table_view.js... OK
checking app/assets/javascripts/views/reconciliations/reconciliation_history_view.js... 1 error:

Lint at line 20 character 4: Extra comma.
},

checking app/assets/javascripts/views/reconciliations/reconciliation_new_view.js... 2 errors:

Lint at line 11 character 33: ['account'] is better written in dot notation.
this.account = this.options['account'];

Lint at line 38 character 36: Missing semicolon.
Backbone.history.history.back()

checking app/assets/javascripts/views/reconciliations/reconciliation_panel_view.js... 4 errors:

Lint at line 11 character 33: ['account'] is better written in dot notation.
this.account = this.options['account'];

Lint at line 12 character 48: ['reconciliation_balance'] is better written in dot notation.
this.reconciliation_balance = this.options['reconciliation_balance'];

Lint at line 13 character 44: ['balance_difference'] is better written in dot notation.
this.balance_difference = this.options['balance_difference'];

Lint at line 34 character 36: Missing semicolon.
Backbone.history.history.back()

checking app/assets/javascripts/views/reconciliations/reconciliation_row_view.js... OK
checking app/assets/javascripts/views/reconciliations/reconciliation_transaction_row.js... OK
checking app/assets/javascripts/views/reconciliations/reconciliation_transactions_view.js... OK
checking app/assets/javascripts/views/reconciliations/reconciliation_view.js... OK
checking app/assets/javascripts/views/reports/bar_chart_view.js... OK
checking app/assets/javascripts/views/reports/category_report_view.js... OK
checking app/assets/javascripts/views/reports/eod_balance_view.js... 5 errors:

Lint at line 14 character 34: ['accounts'] is better written in dot notation.
this.accounts = this.options['accounts'];

Lint at line 15 character 33: ['account'] is better written in dot notation.
this.account = this.options['account'];

Lint at line 16 character 42: ['dateRangeOptions'] is better written in dot notation.
this.dateRangeOptions = this.options['dateRangeOptions'];

Lint at line 17 character 42: ['currentDateRange'] is better written in dot notation.
this.currentDateRange = this.options['currentDateRange'];

Lint at line 53 character 8: Missing semicolon.
}))

checking app/assets/javascripts/views/reports/income_expense_bar_view.js... OK
checking app/assets/javascripts/views/reports/income_vs_expense_view.js... 5 errors:

Lint at line 14 character 42: ['dateRangeOptions'] is better written in dot notation.
this.dateRangeOptions = this.options['dateRangeOptions'];

Lint at line 15 character 42: ['currentDateRange'] is better written in dot notation.
this.currentDateRange = this.options['currentDateRange'];

Lint at line 16 character 36: ['categories'] is better written in dot notation.
this.categories = this.options['categories'];

Lint at line 17 character 39: ['subcategories'] is better written in dot notation.
this.subcategories = this.options['subcategories'];

Lint at line 48 character 8: Missing semicolon.
}))

checking app/assets/javascripts/views/reports/line_chart_view.js... OK
checking app/assets/javascripts/views/reports/pie_chart_view.js... OK
checking app/assets/javascripts/views/reports/report_category_row_view.js... OK
checking app/assets/javascripts/views/reports/report_subcategory_row_view.js... OK
checking app/assets/javascripts/views/reports/report_total_row_view.js... OK
checking app/assets/javascripts/views/reports/report_view.js... OK
checking app/assets/javascripts/views/reports/subcategory_report_view.js... OK
checking app/assets/javascripts/views/transactions/transaction_edit_view.js... OK
checking app/assets/javascripts/views/transactions/transaction_row_view.js... OK
checking app/assets/javascripts/views/transactions/transaction_table_view.js... OK
checking app/assets/javascripts/views/transactions/transactions_index_view.js... OK

Found 79 errors.
